# -*- coding: utf-8 -*-
"""training-SVM.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KOhle5Xy-wicS2h5j8aiP_2xH_3Z-xDN
"""

import os
import numpy as np
import cv2
import pickle
import random
import joblib

from sklearn.model_selection import train_test_split
# from sklearn.svm import SVC #support vector classifier
from sklearn.linear_model import SGDClassifier
from sklearn.metrics import classification_report

import matplotlib.pyplot as plt
# from google.colab import drive
# drive.mount('/content/drive/', force_remount=True)
# !ls "/content/drive/My Drive/datasets/train"

# from google.colab.patches import cv2_imshow

dir = 'C:\\Users\\Strix\\Desktop\\Machine-Learning\\project\\datasets'

categories = ['ก01', 'ข02', 'ฃ03', 'ค04', 'ฅ05',
              'ฆ06', 'ง07', 'จ08', 'ฉ09', 'ช10',
              'ซ11', 'ฌ12', 'ญ13', 'ฎ14', 'ฏ15',
              'ฐ16', 'ฑ17', 'ฒ18', 'ณ19', 'ด20',
              'ต21', 'ถ22', 'ท23', 'ธ24', 'น25',
              'บ26', 'ป27', 'ผ28', 'ฝ29', 'พ30',
              'ฟ31', 'ภ32', 'ม33', 'ย34', 'ร35',
              'ล36', 'ว37', 'ศ38', 'ษ39', 'ส40',
              'ห41', 'ฬ42', 'อ43', 'ฮ44']

data = []

for category in categories:
    path = os.path.join(dir, category)
    label = categories.index(category)

    for img in os.listdir(path):
        imgpath = os.path.join(path, img)
        # cv2_imshow(font_img)
        try:
          font_img = cv2.imread(imgpath, 0)
          font_img = cv2.resize(font_img, (50, 50))
          image = np.array(font_img).flatten()

          data.append([image, label])
        except Exception as e:
          pass

print(len(data))



# pick_in = open('data1.pickle', 'wb')
# pickle.dump(data, pick_in)
# pick_in.close()

# pick_in = open('data1.pickle', 'rb')
# data = pickle.load(pick_in)
# pick_in.close()

random.shuffle(data)
features = []
labels = []
for feature, label in data:
  features.append(feature)
  labels.append(label)

x_train, x_test, y_train, y_test = train_test_split(features, labels, test_size=0.30, random_state=45)

model = SVC(C=1, kernel='poly', gamma='scale')
model = SGDClassifier(loss='log', penalty='l2',
                      learning_rate='optimal', eta0=0.01, max_iter=1000)
model.fit(x_train, y_train)

model = joblib.load('model.sav')
# pick = open('model.sav', 'rb')
# # pickle.dump(model, pick)
# model = pickle.load(pick)
# pick.close()

prediction = model.predict(x_test)
accuracy = model.score(x_test, y_test)

categories = ['ก', 'ข', 'ฃ', 'ค', 'ฅ',
              'ฆ', 'ง', 'จ', 'ฉ', 'ช',
              'ซ', 'ฌ', 'ญ', 'ฎ', 'ฏ',
              'ฐ', 'ฑ', 'ฒ', 'ณ', 'ด',
              'ต', 'ถ', 'ท', 'ธ', 'น',
              'บ', 'ป', 'ผ', 'ฝ', 'พ',
              'ฟ', 'ภ', 'ม', 'ย', 'ร',
              'ล', 'ว', 'ศ', 'ษ', 'ส',
              'ห', 'ฬ', 'อ', 'ฮ']
          
print('Accuracy : ', accuracy)
print('Prediction is : ', categories[prediction[0]])

mychar = x_test[0].reshape(50,50)
plt.imshow(mychar, cmap='gray')
plt.show()